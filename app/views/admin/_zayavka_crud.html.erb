
<!--<link rel="stylesheet" href="http://code.jquery.com/ui/1.9.2/themes/base/jquery-ui.css" />-->
<!--<script src="http://code.jquery.com/jquery-1.8.3.js"></script>-->
<!--<script src="http://code.jquery.com/ui/1.9.2/jquery-ui.js"></script>-->

<script>
 $(function() {
//        $( "#tbs" ).tabs({
//            event: "mouseover",
//            heightStyle: "fill"
//        });
//       $("#tbs").idTabs();
    //------------------DEFINITIONS-----
    HB=Handlebars;
    window.App={action:"<%=@action %>",
                models:{},
                collections:{},
                forms:{zayavka:{},have_arr:[],want_ar:[]},
                protocol:"http://",
                baseUrl:"<%= request.env["HTTP_HOST"]; %>/"
    };
    HB.registerHelper('ifCond', function(v1, v2, options) {
         if(v1 == v2) {
             return options.fn(this);
         }
         return options.inverse(this);
     });
     HB.registerHelper('if-in', function(v1, v2, options) {
         if(v2.indexOf(v1) !=-1) {
             return options.fn(this);
         }
         return options.inverse(this);
     });
    //----------------------------ROUTER------------------------------------
     App.Router = Backbone.Router.extend({
         routes: {
             "admin/zayavkas/new":       "zayavkaNewFun",    // #new
             "admin/zayavkas/:id/edit":  "zayavkaEditFun",  // #update
             "admin/zayavkas/:id":   "zayavkaShowFun"   // #show
         },
         zayavkaNewFun: function() {
             App.action="new";
             console.log("Router action="+ App.action);
         },
         zayavkaEditFun: function(query, id) {
             App.action="edit";
             App.zayavka_id=<%=@zayavka_id %>
             console.log("Router action="+ App.action+" id="+App.zayavka_id+" q="+query);
         },
         zayavkaShowFun: function(query, id) {
             App.action="show";
             App.zayavka_id=id;
             console.log("Router action="+ App.action+" id="+App.cur_id+" q="+query);
         }
     });
    //----------------------------MODELS------------------------------------
    App.Zayavka = Backbone.Model.extend({
        urlRoot:App.protocol+App.baseUrl+"zayavkas/",
        url:App.protocol+App.baseUrl+"zayavkas/",
        initialize: function(){
            this.zayavka_fields=eval('<%=@zayavka_fields; %>'.replace(/&quot;/g,'"'));

//            console.log("SERVER_NAME="+"<%= request.env["SERVER_NAME"]; %>");
//            console.log("REQUEST_URI="+"<%= request.env["REQUEST_URI"]; %>");
//            console.log("HTTP_HOST="+"<%= request.env["HTTP_HOST"]; %>");
        },
        defaults: {
//            id:  111,
            name:       'Text',
            created_at: 'DateTime',
            updated_at: 'DateTime',
            tel_1: 'Text',
            tel_2: 'Text',
            dop: 'Text',
            info_type_id:  0,
            info_source_id:0,
            contact_id:0,
            published:1,
            haves:[],
            wants:[]
        },
        validate: function(attrs) {
         return;
        },
        pickAttributes:function(name){//--собрать все аттрибуты для заявки
            var param;
            if (name=="zayavka"){
              var z_attr_arr=$("*[id^='z-']:not(disabled)");
              for (var i=0; i<z_attr_arr.length;i++){
                  param = _.last(z_attr_arr[i].id.split("-"));
                  console.log("param="+param)
                  console.log("z_attr_arr[i].value="+z_attr_arr[i].value)
                  //App.models.zayavka.set({param:z_attr_arr[i].value})
                  App.models.zayavka.attributes[param]=z_attr_arr[i].value
              }
            }
            if (name=="haves"){
                var h_tabs_cnt=$('#tbs-haves').tabs('tabs').length;
                var attr_arr;
                var have_tab_str;
                var param;
                var key_val={},rec={}
                var have_tab_rec=[];
                for (var i=0; i<h_tabs_cnt;i++){
                    rec={};
                    attr_arr=$("*[id^='hh-"+i+"']:not(disabled)");
                    for (var j=0; j<attr_arr.length;j++){
                       param = _.last(attr_arr[j].id.split("-"));
                       console.log("param="+param)
                       //key_val=eval("[{'"+param+"':'"+attr_arr[j].value+"'}]")
                       rec[param]=attr_arr[j].value;
                       //console.log("nodeName="+attr_arr[j].type)
                       if (attr_arr[j].type=="checkbox") {
                           if (attr_arr[j].checked) {
                                  rec[param]=1;
                           } else {rec[param]=0;}
                       }
                       //console.log(key_val)
                       //have_tab_rec.push(key_val);
                    }
                   // App.models.zayavka.attributes['haves'].push(have_tab_rec)
                    App.models.zayavka.attributes['haves'].push(rec)
                }
                console.log("PICK haves")
                console.log(App.models.zayavka.attributes['haves'])
            }
        },
        zayavkaSave:function(){
          confirm("Save zayavka?");
          this.pickAttributes("zayavka");
          this.pickAttributes("haves");
          this.pickAttributes("wants");

//          App.models.zayavka.save().error(function(e){
//              console.log(e);
//              $.messager.alert('Error',"Status=("+ e.status+")"+e.statusText,'error');
//          }).success(function(e){
//              $.messager.alert('OK!','Zayavka data saved!','info');
//          });
          //console.log(App.models.zayavka.attributes)
        },
        show: function (action){
              console.log(action)

               //---fill models data
               App.main_view= new App.MainView();
               App.main_view.addHaveForm();
               //---generate templates in TABS
               $("#tbs-haves").tabs(
                   {
                       width:"550px",
                       height:"auto",
                       border:true,
                       fit:false,
                       tools: App.main_view.getTabsTools("have"),

                       onBeforeClose: function(title,index){
                           return confirm('Are you sure you want to close ' + title+" tab n="+index+" ?");
                       },
                       onAdd:function(title,index){
                           console.log("onAdd "+index)
                           App.main_view.initHaveEvents(index);

                       },
                       onSelect:function(title,index){
                           //alert(title+' is selected');
                           $(".tabs-selected a.tabs-inner ").css({ 'background-color':'#FFFFDD'});//.tabs li
                           App.main_view.cur_have_item = index;//App.main_view.getHaveTabIndex();
                       }
                   }
               );//idTabs();
               $("#tbs-wants").tabs({
                   width:"550px",
                   height:"auto",
                   border:true,
                   fit:false,
                   tools: App.main_view.getTabsTools("want"),
                   onAdd:function(title,index){
                       console.log("onAdd want "+index)
                       App.main_view.initWantEvents(index);

                   },
                   onSelect:function(title,index){
                       $(".tabs-selected a.tabs-inner ").css({ 'background-color':'#FFFFDD'});
                       $("#wish-attrib-panel-"+index).css({'height':'45px'});
                       App.main_view.cur_want_item = index;
                   }})
               //--init data TABS
               $("#tbs-haves").tabs("getTab",0).html(App.main_view.addHaveForm());
               $("#tbs-wants").tabs("getTab",0).html(App.main_view.addWantForm());
               App.main_view.initHaveEvents(0);
               App.main_view.initWantEvents(0);
               App.main_view.initZayavkaEvents(0);
               //--css hack
                $(".tabs-panels .panel").css({'margin-bottom':"1px"});

        }
    });

    App.Have = Backbone.Model.extend({
        urlRoot: App.baseUrl+"haves/",
        defaults: {
            "obj_n":0,
            "room":0,
            "rayon_id":0,
            "street_id":0
        }
    });
    App.Want = Backbone.Model.extend({

    });
    //--------attributes models------------
     App.Contact = Backbone.Model.extend({

     });
     App.InfoType = Backbone.Model.extend({

    });
    App.InfoSource = Backbone.Model.extend({
        defaults: {
            name: '',
            info_url: '',
            info_type: 0,
            created_at:''
        }
    });

    //----------collection common method---------------------------
     Backbone.Collection.prototype.getSelectOptions=function(){
         var options_arr=[{val:0,label:"select item..."}];
         for (var i in this.models) {
             options_arr.push({val:this.models[i].attributes.id,label:this.models[i].attributes.name})
         }
         return options_arr;
     };
     Backbone.Collection.prototype.fillHtmlSelect=function(dom_id,val_field) {
         console.log("fillHtmlSelect dom_id="+dom_id);
         var value_str="";
         var out_str="<option value=0>Select item...</option>";
         for (var i in this.models) {
             if (val_field != undefined) {
                 value_str=this.models[i].attributes[val_field]; //.field_name;
             }else {
                 value_str=this.models[i].attributes.id;
             }
             out_str=out_str+"<option value='"+value_str+"'>"+this.models[i].attributes.name+"</option>";

         }
         console.log("out_str="+out_str);
         console.log("dom_id="+dom_id);
         $("#"+dom_id).html(out_str);
     }
     //---------collection CLASS---------------------------------------
     App.InfoSources = Backbone.Collection.extend({
         url:App.protocol+App.baseUrl+"info_sources/",
         model: App.InfoSource,
         parse: function(response) {
                 //console.log("RESP 0: "+response[0]);
                return response;
         },
         initialize: function () {
             this.bind("reset", function (model, options) {
                 console.log("Inside event");
                 console.log(model);

                 });
         }
     });
     App.HaveFields = Backbone.Collection.extend({
         url:"http://"+App.baseUrl+"HaveFields.json/",
         fillWishFromCmb: function(index){
             var out_str="";
             for (var i in this.models) {
                 out_str=out_str+"<option value='"+this.models[i].attributes.field_name+"'>"+this.models[i].attributes.name+"</option>";
             }
             $("#wish-from-cmb-"+index).html(out_str);
         }
     });
     App.Statuses = Backbone.Collection.extend({
         //url:"http://"+App.baseUrl+"objs/",
     });
     App.Rents = Backbone.Collection.extend({
         //url:"http://"+App.baseUrl+"objs/",
     });
     App.Objs = Backbone.Collection.extend({
         url:"http://"+App.baseUrl+"objs/",
     });
     App.States = Backbone.Collection.extend({
         url:"http://"+App.baseUrl+"states/",
     });
     App.InfoTypes = Backbone.Collection.extend({
         url:"http://"+App.baseUrl+"info_types/",
     });
     App.Rayons = Backbone.Collection.extend({
         url:"http://"+App.baseUrl+"rayons/",
     });
     App.Streets = Backbone.Collection.extend({
         rayon_id:0,
         //urlMain:"http://"+App.baseUrl+"streets/inrayon/",
         url:"http://"+App.baseUrl+"streets/inrayon/",
         getStreetsInRayon:function(rayon_id){
             //--common cmb
             this.rayon_id=rayon_id;
             this.url="http://"+App.baseUrl+"streets/inrayon/" + String(this.rayon_id)
             console.log("this.url="+this.url+" this.rayon_id="+this.rayon_id)
             var streets_list=this.fetch();
             return streets_list;
             //---multiselect cmp
             //$("#wish-from-cmb-"+index).combogrid({
                //panelWidth:400,
                //value:'Object',
                //idField:'id',
                //textField:'name',
                //rows: [{"id":1,"name":"Object"},{"id":2,"name":"Price"}],
                // //url: App.baseUrl+'HaveFields.json',
                // columns:[[
                // {field:'ck',checkbox:true},
                // {field:'id',title:'id',width:60},
                // {field:'name',title:'Field',width:60}
//               ]]
//            });
         }
     });
     App.Haves = Backbone.Collection.extend({
           model: App.Have
     });
     App.Wants = Backbone.Collection.extend({
        model: App.Want
     });

    //-----------------FORMS---------------------------------
    App.zayavka_form = new Backbone.Form({
        //fields: ['id','created_at','updated_at','name','tel_1'],
        initialize: function(){
           //this.schema=this.setFormSchema();
        },
        idPrefix:"z-",
        model:  App.models.zayavka,
        schema:(App.action=="new")?
                {
                    id:    {type:'Number',template:'field'},
                    name:  {type:'Text',template:'field',validators: ['required']},
                    tel_1: {type:'Text',template:'field'},
                    tel_2: {type:'Text',template:'field'},
                    created_at: {type:'Text',template:'field'},
                    updated_at: {type:'Text',template:'field'},
                    status_id:  { type: 'Select', options:  [],template:'field'  },
                    info_type_id:  { type: 'Select', options: [],template:'field_clear' },
                    info_source_id:{ type: 'Select', options: [],template:'field' },
                    contact_id: { type: 'Select',title:"Contact", options: [{val:0,label:"???"}],template:'field' },
                    dop:  {type:'Text',template:'field',template:'field'},

                    published: {type: 'Checkbox',template:'field_br'}

                }:(App.action=="show")?
                {

                }:(App.action=="update")?
                {

                }:{id:'Number',name:'Text'}


    });//.render();
     //---------------Have Item form-------------------------
     //App.Have_item_form = Backbone.Form({
     App.Have_item_form = {
         //fields: ['obj','roomt','dop'],
         setN:function (cur_n) {
             this.idPrefix="hh-"+cur_n+"-";
         },
         idPrefix:"hh-",
         model: App.models.haves,
         schema:{
             obj_id: { type: 'Select',options:["111","222"],template:'field'},
             room: {type:'Number',template:'field'},
             price_estimate: {type:'Number',template:'field'},
             price_want:{type:'Number',template:'field'},

             floor:{type:'Number',template:'field_clear'},
             floor_house:  {type:'Number',template:'field'},

             rayon_id: {type: 'Select',options:[],template:'field_clear'},
             street_id:{type: 'Select',options:[],template:'field'},

             house_n: {type: 'Text',template:'field_clear'},
             flat_n:  {type: 'Text',template:'field'},

             orientir: {type: 'Text',template:'field_clear'},

             s_all: {type: 'Number',template:'field_clear'},
             s_live:{type: 'Number',template:'field'},
             s_kux :{type: 'Number',template:'field'},
             state_id:  {type:'Select',options:[],template:'field'},
             year: {type:'Number',template:'field'},

             tel:{type:'Text',template:'field_br'},
             dop:{type:'TextArea',template:'field_br'},


            obmen_want:{type: 'Checkbox',template:'field'},
            sell_want: {type: 'Checkbox',template:'field'},
            rent_want: {type: 'Checkbox',template:'field_br'}
         }
     };
    //-----------------VIEWS----------------------------------

     App.templates = {
         //field is the default template used
         field: '\
            <div style="float:left;margin: 5px;"  >\
              <label for="{{id}}">{{title}}</label>\
              <div>{{editor}}</div> <div>{{help}}</div>\
            </div>\
          ',
         //Specify an alternate field template
         fieldPrice: '\
            <div  style="width:10%;float:left;margin:5px;" >\
              <label for="{{id}}">{{title}}</label>\
              <div>{{editor}}</div> <div>{{help}}</div>\
            </div>\
          ',
         field_br: '\
            <div style="float:left;margin:5px;display:block;"  >\
              <label for="{{id}}">{{title}}</label>\
              <div>{{editor}}</div> <div>{{help}}</div>\
            </div>\
          ',
         field_clear: '\
            <div style="float:left;margin:5px;clear:both;"  >\
              <label for="{{id}}">{{title}}</label>\
              <div>{{editor}}</div> <div>{{help}}</div>\
            </div><div class="clear"></div>\
          ',
     };
     App.MainView = Backbone.View.extend({
        id:'#zayavka-tpl',
        wi:0,
        cur_have_item:0,
        cur_want_item:0,
        last_have_item:0,
        last_want_item:0,
        initialize: function(){
            //---change template tags
           /// this.on("haveFormShow",this.addHaveForm,this);
            _.templateSettings = {
                interpolate : /\{\{([\s\S]+?)\}\}/g
            };
            this.render();
        },
        events: {
          "haveFillStreet":"fillStreets",
          "haveFormShow":"addHaveForm"
        },
        initZayavkaEvents:function(){
            if (App.action="new"){
                $("#zayavka_save").click(function(){App.models.zayavka.zayavkaSave();});
                $("#z-id").attr({"disabled":"disabled","placeholder":0})
                $("#z-created_at,#z-updated_at").attr({"disabled":"disabled","placeholder":"today"})
                $("#z-published").val(1).attr("checked",1);
            }
            if (App.action in ["view","update"]){
                App.main_view.bindFormAttributes("zayavka");
            }
        },
        bindFormAttributes:function(name){

        },
        setHaveTabTitle:function(index){

        },
        getTabsTools:function(tabs_name){
            var tool_help={
                iconCls:'icon-help',
                handler:function(){
                    if (tabs_name=="have"){
                        App.main_view.historyHaveTab();
                    }
                    if (tabs_name=="want"){
                        App.main_view.historyWantTab();
                    }
                }
            };
            var tool_add={
                iconCls:'icon-add',
                handler:function(){
                    if (tabs_name=="have"){
                        App.main_view.addHaveTab();
                    }
                    if (tabs_name=="want"){
                        App.main_view.addWantTab();
                    }
                }
            };
            var tool_save={
                iconCls:'icon-save',
                handler:function(){
                    confirm('save?')
                }
            };
            var tool_remove={
                iconCls:'icon-remove',
                handler:function(){
                    confirm('remove?')
                }
            };
            if (App.action=="new"){
                return [tool_add,tool_remove];
            }
            if (App.action=="update"){
                return [tool_add,tool_remove,tool_save,tool_help];
            }
            if (App.action=="view"){
                return [tool_help];
            }
        },
        getHaveTabIndex:function () {
            var tab = $('#tbs-haves').tabs('getSelected');
            var index = $('#tbs-haves').tabs('getTabIndex',tab);
            return (index);
        },
        initHaveEvents:function (index) {
            //----event set-----------------------
           console.log("initHaveEvents index="+index)
            $("#hh-"+index+"-rayon_id").on("change",function(e){
                var tab = $('#tbs-haves').tabs('getSelected');
                App.main_view.fillStreets();
            });
            $("#hh-"+index+"-obj_id").on("change",function(e){

                var tab = $('#tbs-haves').tabs('getSelected');
                var new_title=this.options[this.selectedIndex].text;
                console.log(new_title);
                $("#tbs-haves").find(".tabs-selected .tabs-inner .tabs-title").html(new_title)

            });
            App.main_view.correctHaveCSS(index);

        },
        correctHaveCSS:function(index){
             //--UI style-------------------------
            $("#hh-"+index+"-room").attr("size",4).css({"font-size":"lage","font-weight":"bold"});
            $("#hh-"+index+"-room").numberspinner({min: 1,max: 100,editable: true});
            $("#hh-"+index+"-year").attr("size",8);
            $("#hh-"+index+"-floor").attr("size",4);
            $("#hh-"+index+"-floor_house").attr("size",4);
            $("#hh-"+index+"-floor, #hh-"+index+"-floor_house").numberspinner({min: 1,max: 100, editable: true});
            $("#hh-"+index+"-year").numberspinner({min: 1900,max: 2050, editable: true});
             //--css correct-----------------------
             $(".bbf-field").css("margin","5px");
             $("#hh-"+index+"-price_estimate").attr("size",8).css("color","red");
             $("#hh-"+index+"-price_want").attr("size",8).css("color","green");
             $("#hh-"+index+"-house_n").attr("size",8);
             $("#hh-"+index+"-flat_n").attr("size",8);

             $("#hh-"+index+"-s_all").attr("size",4);
             $("#hh-"+index+"-s_live").attr("size",4);
             $("#hh-"+index+"-s_kux").attr("size",4);

             $("#hh-"+index+"-orientir").attr("size",75);
             $("#hh-"+index+"-dop").attr("size",75);
             $("#hh-"+index+"-tel").attr("size",75);

         },
        correctZayavkaCSS:function(){
            //--B------!!!!!!--activeadmin----!!!!!!!!
            $("#active_admin_content").css({"padding-top":0}) ;
            //--E-----!!!!!!--activeadmin----!!!!!!!!
            $("#zayavka_in_panel").css({"width":window.screen.width*0.92,"height":"100px"});
            $.parser.parse("#zayavka_top_panel");
            $("#z-id").css({"width":"100px"});
            $("#z-name").css({"width":"200px"});
            $("#z-tel_1,#z-tel_2").css({"width":"110px","type":"tel" }); // type="date"
            $("#z-created_at,#z-updated_at").css({"width":"110px","type":"date"}) ;
            $("#z-dop").css({"width":"400px"});
        },
        fillStreets:function(){
            var cur_have_item=this.getHaveTabIndex();
            App.collections.streets.getStreetsInRayon($("#hh-"+cur_have_item+"-rayon_id").val()).done(function(result){
                        console.log("getStreetsInRayon");
                        //console.log(result);
                        var select_items=App.collections.streets.getSelectOptions();
                        console.log(select_items);
                        options_html="";
                        for (item in select_items){
                            options_html= options_html+"<option value='"+select_items[item].val+"'>"+select_items[item].label+"</option>"
                        }
                        console.log(options_html)
                        console.log("cur_have_item="+cur_have_item)
                        $("#hh-"+cur_have_item+"-street_id").html(options_html);
                    }
            );

        },
        addHaveTab:function(){

            this.last_have_item++;
            this.cur_have_item=this.last_have_item;
            var content_new_tab=this.addHaveForm();
            $('#tbs-haves').tabs('add',{
                title:'New Object',
                content:content_new_tab,
                closable:false

            });


        },


        addHaveForm: function(){
            //----set Params----------------------
            App.Have_item_form.setN(this.cur_have_item);
            App.forms.have_arr[this.cur_have_item] = new Backbone.Form(App.Have_item_form);
            //Set the templates
            Backbone.Form.setTemplates(App.templates,App.forms.have_arr[this.cur_have_item]);

            var cur_have_form = App.forms.have_arr[this.cur_have_item];
            cur_have_form.schema.obj_id.options  =App.collections.objs.getSelectOptions();
            cur_have_form.schema.state_id.options=App.collections.states.getSelectOptions();
            cur_have_form.schema.rayon_id.options=App.collections.rayons.getSelectOptions();

            var have_item_html    = $(cur_have_form.render().el).html();
            var one_have_tpl_html= _.template( $("#one-have-tpl").html(), {n:1, have_item_html:have_item_html} );
            //----add to html--------------------
            //var tab = $('#tbs-haves').tabs('getSelected');  // get selected panel
            //tab.panel.content=one_have_tpl_html;
            return one_have_tpl_html;
        },
        initWantEvents:function (index) {
             this.showWantPanels(index);
        },
        addWantForm: function(){

            var want_item_html   ="";
            var one_want_tpl_html= _.template( $("#one-want-tpl").html(), {n:this.last_want_item,want_item_html:want_item_html} );
            return one_want_tpl_html;
        },
        addWantTab:function(){
            //$("#li-want-"+this.cur_want_item).removeClass("active");
            this.last_want_item++;
            var content_new_tab=this.addWantForm();//"<div class=fon-yellow>"+'Tab Body '+this.last_want_item+"<br></div>"

            $('#tbs-wants').tabs('add',{
                width: "500px",
                height: "auto",
                title:'Wish',
                content:content_new_tab,
                closable:false

            });
            this.cur_want_item=this.last_want_item;
        },
        showWantPanels:function(index){
            var content_html=_.template( $("#wish-from-content").html(),{n:index});
            console.log(index+") showWantPanels="+content_html);
            $("#wish-attrib-panel-"+index).panel(
                      {
                          width:"auto",
                          height:"45px",
                          fit:true,
                          title: 'Select wish from:',
                          content:content_html,
                          tools: [{
                              iconCls:'icon-add',
                              handler:function(){App.main_view.addWishAttribContent();}
                          }]
                      }
            );
            //--set variant
            $("#wish-variant-"+index).numberspinner({
                min: 1,
                max: 4,
                editable: true
            });
            //--set combobox-grid
            //App.collections.havefields.fillWishFromCmb(index)
            App.collections.havefields.fillHtmlSelect("wish-from-cmb-"+index,'field_name');

        },
        addWishAttribContent:function(){
            //--compile tpl
            var index= this.cur_want_item;
            var field      = $("#wish-from-cmb-"+index+" option:selected").val();
            var field_name = $("#wish-from-cmb-"+index+" option:selected").text();
            var field_html ="";
            if (field ==0){
                alert("Select item from list!");
                return;
            }
            var hf_arr=App.collections.havefields.where({'field_name':field});
            var field_ui_type=hf_arr[0].attributes.field_ui_type;
            var id_str="wi-"+this.wi+"-tb-"+index+"-wish-"+field;
            if (field_ui_type == 'select') {
                field_html ="<select id='"+id_str+"'><option value=0>Select value...</option></select>";
            }
            if (field_ui_type == 'input') {
                field_html ="<input id='"+id_str+"' type='text' size='10' />";
            }
            if (field_ui_type == 'spinner') {
                field_html="<input id='"+id_str+"' class='easyui-numberspinner' data-options='min:1,max:100,required:true' />"
            }
            var wish_f_tpl = _.template ($("#wish-field-content").html(),{n:index,wi:this.wi,field:field,field_name:field_name,field_html:field_html});
            //--ad to content panel
            $("#wish-attrib-content-"+index).append(wish_f_tpl);
            //---UI-LINK-pars--------------------
            if (field_ui_type == 'spinner'){
                $.parser.parse('#wish-attrib-content-'+index);
            }

            //--fill select fields
            if (field_html.search(/select/) != -1){
                this.fillWishSelectField(field,index, this.wi);
            }
            this.wi++;
        },
        delWishFieldContent: function(field,index,wi) {
            $("#wi-"+wi+"-tb-"+index+"-wish-field-"+field+"-content").remove();
        },
        fillWishSelectField:function (field,index,wi) {
            console.log("Fill select wish field "+field);
            var dom_id ="wi-"+wi+"-tb-"+index+"-wish-"+field;
            if (field == "rayon_id") {
                App.collections.rayons.fillHtmlSelect(dom_id);
            }
            if (field == "obj_id") {
                App.collections.objs.fillHtmlSelect(dom_id);
            }
            if (field == "state_id") {
                App.collections.states.fillHtmlSelect(dom_id);
            }
            if (field == "rent_want") {
                App.collections.rents.fillHtmlSelect(dom_id);
            }
        },
        render: function(){

                    //Set the templates
                    Backbone.Form.setTemplates(App.templates,App.forms.zayavka_form);

                    App.zayavka_form.model=App.models.zayavka;
                    App.zayavka_form.fields=App.models.zayavka.zayavka_fields;
                    App.zayavka_form.schema.info_source_id.options=App.collections.infoSources.getSelectOptions();
                    App.zayavka_form.schema.info_type_id.options=App.collections.infoTypes.getSelectOptions();
                    App.zayavka_form.schema.status_id.options=App.collections.statuses.getSelectOptions();
                    var data_tpl={};
                    if (App.action=="new"){
                        data_tpl={action_new:1,action:"new"}
                    }
                    if (App.action=="update"){
                        data_tpl={action_update:1,action:"update"}
                    }

                    var zayavka_tools_options= HB.compile($("#zayavka_panel_options").html())(data_tpl);
                    var zayavka_item_html = $(App.zayavka_form.render().el).html(); //"<h2>Form's place</h2>"//

                    var haves_tpl_html   = _.template( $("#haves-tpl").html(), {
                                                one_have_tpl_html:""}
                    );
                    var one_want_tpl_html="";
                    var wants_tpl_html   = _.template( $("#wants-tpl").html(), {one_want_tpl_html:one_want_tpl_html} );

                    var zayavka_tpl_html = _.template( $("#zayavka-tpl").html(), {
                                                action:App.action,
                                                zayavka_tools_options:zayavka_tools_options,
                                                zayavka_item_html:zayavka_item_html,
                                                haves_tpl_html:haves_tpl_html,
                                                wants_tpl_html:wants_tpl_html}
                    );

                    $("#zayavka").html( zayavka_tpl_html );
                    this.correctZayavkaCSS();


        }
    });

    //------------------MAIN------------
    App.router = new App.Router();
    Backbone.history.start({pushState: true,root:App.baseUrl});//Backbone.history.start({ pushState: true, root: app.root });
     //--collections---
    App.collections.infoSources=new  App.InfoSources();
    App.collections.infoSources.reset(eval('<%=@info_sources; %>'.replace(/&quot;/g,'"')));
//    App.collections.infoSources.fetch(
//             {
//                 success: function(response,xhr) {
//                     console.log("infoSources Inside success");
//                     console.log(response);
//                     //App.models.zayavka.show(App.action);
//                 },
//                 error: function (errorResponse) {
//                     console.error("infoSources "+errorResponse)
//                 }
//             }
//    ).done(function(){console.log("DONE!!!")});
    App.collections.infoTypes=new App.InfoTypes();
    App.collections.infoTypes.reset(eval('<%=@info_types; %>'.replace(/&quot;/g,'"')));

    App.collections.objs   = new App.Objs();
    App.collections.states = new App.States();
    App.collections.rayons = new App.Rayons();
    App.collections.streets= new App.Streets();
    App.collections.statuses=new App.Statuses();
    App.collections.havefields=new App.HaveFields();
    App.collections.rents=new App.Rents();

    App.collections.objs.reset(eval('<%=@objs; %>'.replace(/&quot;/g,'"')));
    App.collections.states.reset(eval('<%=@states; %>'.replace(/&quot;/g,'"')));
    App.collections.rayons.reset(eval('<%=@rayons; %>'.replace(/&quot;/g,'"')));
    App.collections.havefields.reset(eval('<%=@havefields; %>'.replace(/&quot;/g,'"')));
    App.collections.statuses.reset(eval('<%=@statuses; %>'.replace(/&quot;/g,'"')));
     App.collections.rents.reset(eval('<%=@rents; %>'.replace(/&quot;/g,'"')));
    //console.log(App.collections.infoSources);

    App.models.zayavka = new App.Zayavka();
    App.models.haves   = new App.Haves();
    App.models.wants   = new App.Wants();


    App.models.zayavka.show(App.action);
 });//---ready
</script>

<!--  ******************************TEMPLATES****************************** -->
<script type="text/x-handlebars-template" id="zayavka_panel_options">
  {{#ifCond action "update"}}
  {
  iconCls:'icon-save',
  handler:function(){alert('saved!!!')}
  },
  {{/ifCond}}
  {
  iconCls:'icon-help',
  handler:function(){alert('history')}
  }
</script>
<script type="text/template" id="zayavka-top-content-tpl">
  {{#ifCond action "new"}}
  {{/ifCond}}
</script>
<script type="text/template" id="zayavka-tpl">
 <!--<div class="Columns">-->
 <div id="zayavka_top_panel">
  <div id="zayavka_in_panel"style="height: 120px;" class="easyui-panel" title="Zayavka"  data-options="fit:true,collapsible:true,tools:[
			{{zayavka_tools_options}}
			]">
  {{zayavka_item_html}}
  </div>
  <!--</div>-->
</div>
  <table width="98%">
    <tr>
      <td width="50%">
        <div class="panel">
          <h3>Haves</h3>

          {{haves_tpl_html}}
        </div>
      </td>
      <td width="50%">
        <div class="panel">
          <h3>Wants</h3>

          {{wants_tpl_html}}
        </div>
      </td>
    </tr>
  </table>


  <fieldset class="actions">
  <ol>
    <input type="submit" value="Save zayavka" id="zayavka_save" name="commit">
    <a href="/admin/zayavkas">Cancel</a>
  </ol>
</fieldset>

</script>
<!--  ******************************TEMPLATES  HAVES****************************** -->
<script type="text/template" id="haves-tpl">
 <div style="width:100%;height:100%">
  <!--<input type="submit" value="Add (+)" id="add_have" style="margin-left:35px;margin-bottom:10px">-->
   <div id="tbs-haves"  class="easyui-tabs" >
     <div title="My object" style="padding:10px;background-color:#FFFFDD" >
       {{one_have_tpl_html}}
     </div>
   </div>

 </div>
</script>
<!--  ******************************TEMPLATES  ONE-HAVES****************************** -->
<script type="text/template" id="one-have-tpl">
<div id="have-item-{{n}}" class="have-item">
  <label>Предложение:</label>
  {{have_item_html}}
  <!--<input type="submit" value="Del (x)" id="delete-have_{{n}}">-->
</div>
</script>
<!--  ******************************TEMPLATES WANTS****************************** -->
<script type="text/template" id="wants-tpl">
  <div>
  <!--<input type="submit" value="Add ->" id="add_want" style="margin-left:35px;margin-bottom:10px">-->

  <div id="tbs-wants" class="easyui-tabs" style="width:550px;height:auto" >
    <div title="Wish" style="padding:10px;background-color:#FFFFDD">
      <p style="font-size:14px">jQuery EasyUI framework help you build your web page easily.</p>
      title
      {{one_want_tpl_html}}
    </div>
  </div>

  </div>
</script>
<!--  ******************************TEMPLATES  ONE-WANT****************************** -->
<script type="text/template" id="one-want-tpl">
  <div id="want-item-{{n}}" class="want-item"  style="width: 500px; height: auto;">
    <label>Спрос:</label>
    <div id="wish-attrib-panel-{{n}}" style="padding:5px;" >
      {{want_item_html}}

    </div>
    <hr>
    <div id="wish-attrib-content-{{n}}" style="padding:5px;">
    </div>
  </div>
</script>

<script type="text/template" id="wish-from-content">
  <label>Параметр:</label>
  <select id="wish-from-cmb-{{n}}"><option id="0">Выберите параметр...</option></select>
  <label>Вариант:</label><input type="text" id="wish-variant-{{n}}" size=3 value=1 ></input>
</script>

<script type="text/template" id="wish-field-content">
  <div id="wi-{{wi}}-tb-{{n}}-wish-field-{{field}}-content" style="display:inline;width:100%;height:150px;margin:5px;background-color:#FFFFDD">
   <table style="background-color:#dddddd">
     <tr>
       <td width='20%'>{{field_name}}</td>
       <td width='30%'>
         <select id="tb-{{n}}-wish-{{field}}-cond">
         <option value="=" selected>Равно</option>
         <option value="<>">Не равно</option>
         <option value=">=">Больше или равно</option>
         <option value="<=">Меньше или равно</option>
         <option value=">">Больше</option>
         <option value="<">Меньше</option>
        </select></td>
       <td width='30%'>
         {{field_html}}
       </td>
       <td width="10%">
         <a href="javascript:App.main_view.delWishFieldContent('{{field}}',{{n}},{{wi}})" id="wi-{{wi}}-tb-{{n}}-wish-field-{{field}}-del" >Удалить</a>
       </td>
     </tr>
   </table>

</script>
<!--  ******************************HTML*********************************** -->
<div id="zayavka"></div>
<div id="dialog"></div>
<div id="win"></div>