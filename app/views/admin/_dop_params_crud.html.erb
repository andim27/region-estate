<head>
<link rel="stylesheet" type="text/css" href="/assets/themes/default/easyui.css">
<link rel="stylesheet" type="text/css" href="/assets/themes/icon.css">
<script type="text/javascript" src="/assets/jquery-1.8.0.min.js"></script>
<script type="text/javascript" src="/assets/jquery.easyui.min.js"></script>
<!--<script type="text/javascript" src="/assets/backbone-min.js"></script>-->
<!--<script type="text/javascript" src="/assets/underscore-min.js"></script>-->
</head>
<%= csrf_meta_tag %>
<script type="text/javascript">
   ///// $(function() {
   //-----------DEF INIT----------------------------
   try {
   window.App={
       models:{},
       collections:{},
       protocol:"http://",
       url:"<%= request.env["HTTP_HOST"]; %>"+"/dop_params/",
       baseUrl:"<%= request.env["HTTP_HOST"]; %>/"
   };
//   App.Obj = Backbone.Model.extend({
//       urlRoot:App.protocol+App.baseUrl+"objs/"
//   });
//   App.DopParam = Backbone.Model.extend({
//       urlRoot:App.protocol+App.baseUrl+"dop_params/"
//   });
//   App.Objs = Backbone.Collection.extend({
//       url:"http://"+App.baseUrl+"objs/",
//       model:App.Obj
//   });
//   App.DopParams = Backbone.Collection.extend({
//       url:"http://"+App.baseUrl+"dop_params/",
//       model:App.DopParam
//   });
//   //---------END INIT------------------------------
//   //---------DEF APP VARS--------------------------
//   App.models.dop_param=new App.DopParam()
//   App.collections.dop_params=new App.DopParams()
//   App.collections.dop_params.url="http://"+App.baseUrl+"dop_params/"
   } catch (e) {
       console.log(e)
   }
   //---------END APP VARS--------------------------
        var data_fields_list=[{
            "id":1,
            "text":"text1"
        },{
            "id":2,
            "text":"text2"
        },{
            "id":4,
            "text":"text4"
        },{
            "id":5,
            "text":"text5"
        }]  ;
   var objs_json=eval('<%= @obj_rows %>'.replace(/&quot;/g,'"'));
   var data_json={"total":<%= @total_rows %>,"rows":eval('<%= @dop_params_rows %>'.replace(/&quot;/g,'"'))}
   console.log("objs_json="+objs_json)
//        var data_json={"total":7,"rows":[
//            {"id":1,"name":"All Tasks","begin":"3/4/2010","end":"3/20/2010","progress":60,"iconCls":"icon-ok"},
//            {"id":2,"name":"Designing","begin":"3/4/2010","end":"3/10/2010","progress":100,"_parentId":1,"state":"closed"},
//            {"id":21,"name":"Database","persons":2,"begin":"3/4/2010","end":"3/6/2010","progress":100,"_parentId":2},
//            {"id":22,"name":"UML","persons":1,"begin":"3/7/2010","end":"3/8/2010","progress":100,"_parentId":2},
//            {"id":23,"name":"Export Document","persons":1,"begin":"3/9/2010","end":"3/10/2010","progress":100,"_parentId":2},
//            {"id":3,"name":"Coding","persons":2,"begin":"3/11/2010","end":"3/18/2010","progress":80},
//            {"id":4,"name":"Testing","persons":1,"begin":"3/19/2010","end":"3/20/2010","progress":20}
//        ]};

        var tools= [
            {
                iconCls: 'icon-add',
                handler: function(){append()}
            },{
                iconCls: 'icon-edit',
                handler: function(){edit()}
            },
            {
                iconCls: 'icon-remove',
                handler: function(){remove()}
            },'-',
            {
                iconCls: 'icon-save',
                handler: function(){saveItem()}
            },
            {
                iconCls: 'icon-cancel',
                handler: function(){cancel()}
            }
        ]
        function onContextMenu(e,row){
            e.preventDefault();
            $(this).treegrid('select', row.id);
            $('#mm').menu('show',{
                left: e.pageX,
                top: e.pageY
            });
        }
        //---DEF BASE fun
        ajaxBeforSend= function(xhr) {
            xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))
        }

        function appendToBase(param){
            console.log("url="+App.url)
            console.log(param)
            $.ajax(
                {type: "POST",
                 beforeSend:ajaxBeforSend,
                 url:App.protocol+App.url,data:param
                }
            ).done(function(e){
                        //var cur_node=$('#tg').treegrid('getSelected')
                        console.log("append id from base id="+ e.id)

                        $('#tg').treegrid('append',{
                            parent: param.dop_param._parentId,
                            data: [{
                                id:e.id,
                                name:"New item - "+ e.id,
                                fields_list:"2"

                            }]
                        })
                        $('#tg').treegrid('select', e.id)
                        $.messager.show({title:'Dop params',msg:'Added! id='+ e.id,showType:'fade',style:{right:'',bottom:''}});
                        }).error(function(e){console.log(e);alert('Error - can"t append to base')})
        }
        function updateToBase(param){
            $.ajax(
                    {type: "PUT",
                     beforeSend:ajaxBeforSend,
                     url:App.protocol+App.url+param.dop_param.id,data:param
                    }
            ).done(function(e){
                        $.messager.show({title:'Dop params',msg:'Saved! id='+ e.id,showType:'fade',style:{right:'',bottom:''}});
                        }).error(function(e){console.log(e);alert('Error - ')})
        }
        //---END
        var idIndex = 100;
        function append(){
            idIndex++;
            var node            = $('#tg').treegrid('getSelected');
            var new_name        = 'New param '+idIndex;
            var fields_list_str = node.fields_list
            var appended_id=idIndex;
            appendToBase({dop_param:{_parentId:node.id,name:new_name,fields_list:fields_list_str}})


        }
        function remove(){
            var node = $('#tg').treegrid('getSelected');
            if (node){
                $('#tg').treegrid('remove', node.id);
            }
        }
        function collapse(){
            var node = $('#tg').treegrid('getSelected');
            if (node){
                $('#tg').treegrid('collapse', node.id);
            }
        }
        function expand(){
            var node = $('#tg').treegrid('getSelected');
            if (node){
                $('#tg').treegrid('expand', node.id);
            }
        }
        var editingId;
        function edit(){
            if (editingId != undefined){
                $('#tg').treegrid('select', editingId);
                return;
            }
            var row = $('#tg').treegrid('getSelected');
            if (row){
                editingId = row.id
                $('#tg').treegrid('beginEdit', editingId);
            }
            console.log("EDIT id="+editingId)
        }
        function saveItem(){
            if (editingId != undefined){
                var t = $('#tg');
                t.treegrid('endEdit', editingId);
                var savedId=editingId;
                editingId = undefined;
//                var persons = 0;
//                var rows = t.treegrid('getChildren');
//                for(var i=0; i<rows.length; i++){
//                    var p = parseInt(rows[i].persons);
//                    if (!isNaN(p)){
//                        persons += p;
//                    }
//                }
//                var frow = t.treegrid('getFooterRows')[0];
//                frow.persons = persons;
//                t.treegrid('reloadFooter');
                node_select = $('#tg').treegrid('getSelected');
                node = $('#tg').treegrid('getSelected');//$('#tg').treegrid('find',savedId);
                node_parent = $('#tg').treegrid('getParent',node.id);
                console.log("SAVE node i="+node.id+" name="+node.name)
                console.log(node)
                console.log("node_selected.id="+node_select.id+" name="+node_select.name)
                console.log($('#tg').treegrid('find',savedId) )
                updateToBase({dop_param:{id:node.id,name:node.name,fields_list:node.fields_list}})
            }
        }
        function cancel(){
            if (editingId != undefined){
                $('#tg').treegrid('cancelEdit', editingId);
                editingId = undefined;
            }
        }
        function onClickRow(row){
           console.log("Row.id="+row.id)
        }
        //-----------------main--------------------
        $.parser.parse("#tg");
   ///// });
</script>

<div id="dop_params_cont"  >

  <div style="margin:10px 0;"></div>

  <table id="tg" class="easyui-treegrid" title="Dop params attribute" style="width:700px;height:350px"
         data-options="
				iconCls: 'icon-ok',
				rownumbers: true,
				animate: true,
				collapsible: true,
				fitColumns: true,
				data:data_json,
				toolbar:tools,
				idField: 'id',
				treeField: 'name',
				onClickRow:onClickRow,
				onContextMenu: onContextMenu
			">
    <thead>
    <tr>
      <th data-options="field:'name',width:180,editor:'text'">Task Name</th>
      <th data-options="field:'fields_list',width:160,align:'right',formatter:
                        function(value,row){
							return row.id;
						},
						editor:{
							type:'combobox',
							options:{
								valueField:'id',
								textField:'name',
								data:objs_json,
								multiple:true,
                                panelHeight:'auto',
								//url:'../datagrid/products.json',
								required:true
							}
						}">Fields_list</th>
      <!--<th data-options="field:'begin',width:80">Begin Date</th>-->
      <!--<th data-options="field:'end',width:80">End Date</th>-->
      <!--<th data-options="field:'progress',width:120">Progress</th>-->
    </tr>
    </thead>
  </table>
  <div id="mm" class="easyui-menu" style="width:120px;">
    <div onclick="append()" data-options="iconCls:'icon-add'">Append</div>
    <div onclick="remove()" data-options="iconCls:'icon-remove'">Remove</div>
    <div onclick="edit()" data-options="iconCls:'icon-edit'">Edit</div>
    <div class="menu-sep"></div>
    <div onclick="collapse()">Collapse</div>
    <div onclick="expand()">Expand</div>
  </div>

</div>